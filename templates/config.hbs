$(document).ready(function() {
	 /**
	 * Initial data
	 *
	 * Fill in the JSON data that should be populated into the form.  This can be any JSON data that you'd like
	 * provided that it fits the schema and options (if you provide those).
	 *
	 */
{{#if data}}
	var data = {{{data}}};	
{{else}}
	var data = {};
{{/if}}

	/**
	 * JSON-schema for the form
	 *
	 * The form schema defines the data types, validation logic and other constraints that need to be satisfied in
	 * order for the form to be considered valid.
	 *
	 * This should follow the JSON-schema convention.
	 * @see http://json-schema.org
	 *
	 * Full schema settings are listed here:
	 * @see http://www.alpacajs.org
	 *
	 */
{{#if schema}}
	var schema = {{{schema}}};	
{{else}}
	var schema = {};
{{/if}}

	/**
	 * Layout options for the form
	 *
	 * These options describe UI configuration for the controls that are rendered for the data and schema.  You can
	 * tweak the layout and presentation aspects of the form in this section.
	 *
	 * Full options settings are listed here:
	 * @see http://www.alpacajs.org
	 *
	 */
{{#if options}}
	var options = {{{options}}};

	if (document.getElementsByTagName('meta').description) {
		options.form = {};
	} else {
		options.form = {
			"buttons": {
				"submit": {}
			},
			"toggleSubmitValidState": false
		};
	}
	
{{else}}
	var options = {};
{{/if}}
	
	//* End Initial data

	/**
	 * This is an optional post render callback that Alpaca will call once the form finishes rendering.  The form
	 * rendering itself is asynchronous as it may load templates or other resources for use in generating the UI.
	 *
	 * Once the render is completed, this callback is fired and the top-level Alpaca control is handed back.
	 *
	 * @param control
	 */
	var postRenderCallback = function(control) {
		validateForm(control);
		
		// Custom Programming
		{{{scripts}}}
		
		$( ":input" ).keyup(function() {
			updateCamunda(control.getValue());
			validateForm(control,true);
		});
	};
	
	// Call functions to init Alpaca integration with Camunda
	var view = editForm(data);
	initCamunda(schema, options);
	
	/**
	 * Render the form.
	 *
	 * We call alpaca() with the data, schema and options to tell Alpaca to render into the selected dom element(s).
	 *
	 */ 
	$("#{{{formid}}}").alpaca({
		"dataSource": data,
		"optionsSource": options,
		"schemaSource": schema,
		"viewSource": view,
		"postRender": postRenderCallback
	});
});