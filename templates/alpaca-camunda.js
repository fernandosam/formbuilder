(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['alpaca-camunda.hbs'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return " /**\n * Functions to integrate Camunda with AlpacaJS\n */\n \nvar validateForm = function(control,refresh) {\n	control.refreshValidationState(refresh);\n	if (control.form.isFormValid()) {\n		$('button[ng-click=\"complete()\"]').removeAttr(\"disabled\");\n	} else {\n		$('button[ng-click=\"complete()\"]').attr(\"disabled\", \"true\");\n	}\n};\n\nvar upFirstLetter = function(string) {\n	return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nvar dataType = function(schema, nameInput) {\n	var prop = schema.properties[nameInput];\n\n	if (prop) {\n		if (prop.type == \"array\") prop.type = \"string\";\n		prop = upFirstLetter(prop.type);\n	} else {\n		prop = \"String\";\n	}\n\n	return prop;\n};\n\nvar initCamunda = function(schema, options) {\n	for (key in options.fields) {\n		var elNew = document.createElement(\"input\");\n		elNew.setAttribute(\"name\", key);\n		elNew.setAttribute(\"type\", \"hidden\");\n		elNew.setAttribute(\"cam-variable-name\", key);\n		elNew.setAttribute(\"cam-variable-type\", dataType(schema, key));\n		elNew.setAttribute(\"class\", \"form-control\");\n		$('#form').append(elNew);\n	}\n\n	$('input:hidden').each(function() {\n		$(this).wrap(\"<div class='form-group'>\");\n	});\n};\n\nvar updateCamunda = function(formValue) {\n	$('input:hidden').each(function() {\n		var nameInput = $(this).attr(\"name\");\n		var valueField = formValue[nameInput];\n\n		if (valueField) {\n			$(this).attr(\"value\", valueField);\n		}\n	});\n};\n\nvar editForm = function(data) {\n	var view = {\n		\"parent\": \"bootstrap-create\",\n		\"locale\": \"pt_BR\"\n	};\n\n	if (!jQuery.isEmptyObject(data)) {\n		view.parent = \"bootstrap-edit\";\n		$('button[ng-click=\"complete()\"]').removeAttr(\"disabled\");\n	}\n\n	return view;\n};";
},"useData":true});
})();