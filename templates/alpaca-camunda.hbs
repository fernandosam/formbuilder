 /**
 * Functions to integrate Camunda with AlpacaJS
 */
 
var validateForm = function(control,refresh) {
	control.refreshValidationState(refresh);
	
	if (control.form.isFormValid()) {
		$('button[ng-click="complete()"]').removeAttr("disabled");
	} else {
		$('button[ng-click="complete()"]').attr("disabled", "true");
	}
};

var upFirstLetter = function(string) {
	return string.charAt(0).toUpperCase() + string.slice(1);
};

var dataType = function(schema, nameInput) {
	var prop = schema.properties[nameInput];

	if (prop) {
		if (prop.type == "array") prop.type = "string";
		prop = upFirstLetter(prop.type);
	} else {
		prop = "String";
	}

	return prop;
};

var updateCamunda = function(schema, formValue) {
    var toArray = [];
    $(":input[name-cam]").remove();
    recursiveIteration(schema, formValue, toArray);
};

var recursiveIteration = function(schema, object, toArray) {
    for (var property in object) {
        if (object.hasOwnProperty(property)) {
            if (typeof object[property] == "object") {
                recursiveIteration(schema, object[property], toArray);
            } else {
                //found a property which is not an object, check for your conditions here
                var key = property;
                var value = object[property];
                var dType = dataType(schema, key);

                if (toArray[key]) {
                    toArray[key] = toArray[key] + 1;
                } else {
                    toArray[key] = 1;
                }

                if (toArray[key] > 1) {
                    key = property + "_" + toArray[key];
                }

                if (key !== "" && value !== "") {
                    var hiddenInput = $(":input[cam-variable-name=" + key + "]");
                    var hiddenInputVal = hiddenInput.val();

                    if (hiddenInputVal === undefined) {
                        var elNew = document.createElement("input");
                        elNew.setAttribute("name", key);
                        elNew.setAttribute("type", "hidden");
                        elNew.setAttribute("cam-variable-name", key);
                        elNew.setAttribute("cam-variable-type", dType);
                        elNew.setAttribute("class", "form-control");
                        elNew.setAttribute("value", value);
						
						var dv = document.createElement('div');
						dv.setAttribute("class", "form-group");
						dv.setAttribute("name-cam", key);
						dv.appendChild(elNew);
                        
						//$(elNew).wrap("<div class='form-group'>");
						
						$('form').prepend(dv);
						
                    } else {
                        hiddenInput.attr("value", value)
                    }
                }
                //console.log("found prop: " + object[property]);
            }
        }
    }
};

var editForm = function(data) {
	var view = {
		"parent": "bootstrap-create",
		"locale": "pt_BR"
	};

	if (!jQuery.isEmptyObject(data)) {
		view.parent = "bootstrap-edit";
		$('button[ng-click="complete()"]').removeAttr("disabled");
	}

	return view;
};